version: '3'

volumes:
  seance-db-data:
    external: true

services:
  db:
    image: postgres:11-alpine
    environment:
      PGHOST: db
      POSTGRES_PASSWORD: postgres
    volumes:
      - seance-db-data:/var/lib/postgresql/data
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - /app/assets/node_modules
      - ./assets:/app/assets
      - ./config:/app/config:ro
      - ./lib:/app/lib:ro
      - ./priv:/app/priv
      - ./test:/app/test:ro
      - ./mix.exs:/app/mix.exs:ro
      - seance-db-data:/var/lib/postgresql/data
    stdin_open: true
    tty: true
    environment:
      - PGDATABASE=seance_dev
      - PGHOST=db
      - PGPASSWORD=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - SIGNING_SECRET
      - GH_AUTH_TOKEN
      - UNSPLASH_ACCESS_KEY
      - UNSPLASH_SECRET_KEY
      - IMGUR_CLIENT_ID
      - IMGUR_CLIENT_SECRET
    ports:
      - "4000:4000"
    links:
      - db
    command:
      - ./bin/run.sh
  tests:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command:
      - ./bin/test.sh
    volumes:
      - .:/app
      - seance-db-data:/var/lib/postgresql/data
    links:
      - db
    environment:
      - PGDATABASE=seance_test
      - PGHOST
      - PGPASSWORD
      - PGPORT
      - PGUSER
      - SIGNING_SECRET
      - GH_AUTH_TOKEN
      - UNSPLASH_ACCESS_KEY
      - UNSPLASH_SECRET_KEY
      - IMGUR_CLIENT_ID
      - IMGUR_CLIENT_SECRET
  release:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PGDATABASE
      - PGHOST
      - PGPASSWORD
      - PGPORT
      - PGUSER
      - SIGNING_SECRET
      - GH_AUTH_TOKEN
      - UNSPLASH_ACCESS_KEY
      - UNSPLASH_SECRET_KEY
      - IMGUR_CLIENT_ID
      - IMGUR_CLIENT_SECRET
    ports:
      - "4000:4000"
